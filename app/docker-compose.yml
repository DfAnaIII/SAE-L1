services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3030:3000"
    environment:
      - API_URL=http://backend:4000
      - CLOUDFLARE_SITE_KEY=${CLOUDFLARE_SITE_KEY}
      - HOST=0.0.0.0
    volumes:
      - frontend_node_modules:/app/node_modules
      - ./frontend:/app
      - nuxt_data:/app/.nuxt
    command: sh -c "npm run build && npm run start"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:4040:4000"
    environment:
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-strongpassword}
      - CLOUDFLARE_SITE_KEY=${CLOUDFLARE_SITE_KEY}
      - CLOUDFLARE_SECRET_KEY=${CLOUDFLARE_SECRET_KEY}
      - TURNSTILE_SECRET_KEY=${CLOUDFLARE_SECRET_KEY}
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-strongpassword}
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    internal: false

volumes:
  nuxt_data:
  redis_data:
  frontend_node_modules:
